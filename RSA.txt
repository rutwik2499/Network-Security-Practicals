import java.util.*;
import java.nio.charset.StandardCharsets;
import javax.crypto.*;
import java.security.*;

public class test
{
    public static void main(String[] args) throws Exception
    {
        Scanner sc=new Scanner(System.in);
        KeyPairGenerator kp=KeyPairGenerator.getInstance("RSA");
        kp.initialize(2048);
        KeyPair k=kp.generateKeyPair();
        PublicKey pb=k.getPublic();
        PrivateKey pk=k.getPrivate();

        System.out.print("Enter String to Encrypt: ");
        String data=sc.nextLine();
        System.out.println("\n\nOriginal String: "+data);
        System.out.println("Public Key: "+pb.toString());
        System.out.println("Private Key: "+pk.toString());


        String encryptedString=encrypt(data, pb);
        System.out.println("\n\nEncrypted String is: "+encryptedString);

        String decryptedString=decrypt(encryptedString,pk);
        System.out.println("Decrypted String is: "+decryptedString);

    }

    public static String encrypt(String originalString,PublicKey pb) throws Exception
    {
        Cipher cp=Cipher.getInstance("RSA");
        cp.init(Cipher.ENCRYPT_MODE,pb);
        byte[] dbytes=originalString.getBytes(StandardCharsets.UTF_8);
        byte[] encry=cp.doFinal(dbytes);
        String encryptedString=Base64.getEncoder().encodeToString(encry);
        return encryptedString;
    }

    public static String decrypt(String encryptedString,PrivateKey pk) throws Exception
    {
        Cipher cp=Cipher.getInstance("RSA");
        cp.init(Cipher.DECRYPT_MODE,pk);

        byte[] arr=Base64.getDecoder().decode(encryptedString.getBytes(StandardCharsets.UTF_8));

        byte[] decry=cp.doFinal(arr);
        String s=new String(decry,StandardCharsets.UTF_8);
        return s;
    }
}
